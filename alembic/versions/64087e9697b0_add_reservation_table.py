"""add reservation table

Revision ID: 64087e9697b0
Revises: 11273cd2c1c2
Create Date: 2025-05-19 02:20:28.671694

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '64087e9697b0'
down_revision: Union[str, None] = '11273cd2c1c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('properties',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_properties_id'), 'properties', ['id'], unique=False)
    op.create_table('room_types',
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('base_rate', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_types_id'), 'room_types', ['id'], unique=False)
    op.create_index(op.f('ix_room_types_property_id'), 'room_types', ['property_id'], unique=False)
    op.create_table('rate_plans',
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('room_type_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('daily_rate', sa.Float(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_plans_id'), 'rate_plans', ['id'], unique=False)
    op.create_index(op.f('ix_rate_plans_property_id'), 'rate_plans', ['property_id'], unique=False)
    op.create_table('rooms',
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('AVAILABLE', 'OCCUPIED', 'CLEANING', 'MAINTENANCE', name='room_status'), nullable=True),
    sa.Column('floor', sa.String(), nullable=True),
    sa.Column('amenities', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['room_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_index(op.f('ix_rooms_property_id'), 'rooms', ['property_id'], unique=False)
    op.create_table('room_status_logs',
    sa.Column('room_id', sa.Integer(), nullable=True),
    sa.Column('old_status', sa.String(), nullable=False),
    sa.Column('new_status', sa.String(), nullable=False),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.Column('changed_by', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_status_logs_id'), 'room_status_logs', ['id'], unique=False)
    op.create_index(op.f('ix_room_status_logs_room_id'), 'room_status_logs', ['room_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_room_status_logs_room_id'), table_name='room_status_logs')
    op.drop_index(op.f('ix_room_status_logs_id'), table_name='room_status_logs')
    op.drop_table('room_status_logs')
    op.drop_index(op.f('ix_rooms_property_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_rate_plans_property_id'), table_name='rate_plans')
    op.drop_index(op.f('ix_rate_plans_id'), table_name='rate_plans')
    op.drop_table('rate_plans')
    op.drop_index(op.f('ix_room_types_property_id'), table_name='room_types')
    op.drop_index(op.f('ix_room_types_id'), table_name='room_types')
    op.drop_table('room_types')
    op.drop_index(op.f('ix_properties_id'), table_name='properties')
    op.drop_table('properties')
    # ### end Alembic commands ###
